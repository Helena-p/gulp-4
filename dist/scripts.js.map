{"version":3,"sources":["scripts.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","console","log","camelCase","camelcase","2","input","options","Array","isArray","_objectSpread","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","toLocaleUpperCase","locale","toLocaleLowerCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","string","character","test","slice","testLocal","replace","m1","toLowerCase","charAt","_","p1","m","default","join","hasUpperCase","postProcess","preserveCamelCase"],"mappings":"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","file":"scripts.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nconst testLocal = \"Here's a local script file!\";\nconsole.log(testLocal);\n\nconst camelCase = require(\"camelcase\");\nconst testVar = \"testing camelcase in js\";\nconsole.log(camelCase(testVar));\n\nconsole.log(\"Here's another script file\");\n\n(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nconst testLocal = \"Here's a local script file!\";\nconsole.log(testLocal);\n\nconst camelCase = require(\"camelcase\");\nconst testVar = \"testing camelcase in js\";\nconsole.log(camelCase(testVar));\n\nconsole.log(\"Here's another script file\");\n\n},{\"camelcase\":2}],2:[function(require,module,exports){\n'use strict';\n\nconst preserveCamelCase = (string, locale) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase(locale) === character && character.toLocaleUpperCase(locale) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase(locale) === character && character.toLocaleLowerCase(locale) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = input => {\n\treturn input.replace(/^[\\p{Lu}](?![\\p{Lu}])/gu, m1 => m1.toLowerCase());\n};\n\nconst postProcess = (input, options) => {\n\treturn input.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase(options.locale))\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase(options.locale));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase(options.locale) : input.toLocaleLowerCase(options.locale);\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase(options.locale);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, options.locale);\n\t}\n\n\tinput = input.replace(/^[_.\\- ]+/, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input);\n\t} else {\n\t\tinput = input.toLocaleLowerCase();\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = input.charAt(0).toLocaleUpperCase(options.locale) + input.slice(1);\n\t}\n\n\treturn postProcess(input, options);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n\n},{}]},{},[1]);\n\n},{\"camelcase\":2}],2:[function(require,module,exports){\n'use strict';\n\nconst preserveCamelCase = (string, locale) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase(locale) === character && character.toLocaleUpperCase(locale) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase(locale) === character && character.toLocaleLowerCase(locale) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = input => {\n\treturn input.replace(/^[\\p{Lu}](?![\\p{Lu}])/gu, m1 => m1.toLowerCase());\n};\n\nconst postProcess = (input, options) => {\n\treturn input.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase(options.locale))\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase(options.locale));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase(options.locale) : input.toLocaleLowerCase(options.locale);\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase(options.locale);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, options.locale);\n\t}\n\n\tinput = input.replace(/^[_.\\- ]+/, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input);\n\t} else {\n\t\tinput = input.toLocaleLowerCase();\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = input.charAt(0).toLocaleUpperCase(options.locale) + input.slice(1);\n\t}\n\n\treturn postProcess(input, options);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n\n},{}]},{},[1]);\n"]}